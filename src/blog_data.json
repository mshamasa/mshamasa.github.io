{
  "data": [
    {
      "title": "Fast.ai Lesson 2",
      "date": "10/28/20",
      "text": [
        "Takeaway: Here we learn more about models, how to augment data to help the model get better. In the case of images we can crop or stretch them and use those images to train the model further. Then we can use our trained model to clean up invalid data, like non-bear images for a bear model (this is a cool test to see how well it’s doing). We also learn a lot about the down sides of ML, like training a model on pictures from the internet is not the same as images from a camera. Making sure you don’t build a biased model that will keep feeding on said biases. We also built a bear model that can tell the difference between 3 types of bears (grizzly, black and teddy).",
        "Downside: Deploying the model online instructions are unclear. Following the instructions and it didn’t really work but I understand the idea behind it so I didn’t care too much."
      ]
    },
    {
      "title": "Fast.ai Lesson 1",
      "date": "10/27/20",
      "text": [
        "First impressions, fantastic! Even if you don’t plan on writing code, going through this material and learning about Machine Learning (ML); is worth it. It gives you an insight into how the magic happens, which boils down to simple mathematics, depending on the model you use. Imagine (1 + 1) just being done 1 million times, somewhere along those lines. But the best part is learning how they are trained. In lesson 1 you will learn how a model is trained like an Image classifier, you build a cat one yourself! You also learn about the many layers in a model and how each layer builds on top of each other. Finally I think the most important takeaway was how to use validation sets and test sets. The insight into testing will not only help you as an individual learning but as an organization as well.",
        "Downside right now? Documentation, but just ever so slightly. Links lead to different pages and content, but I understand this is constantly being updated, so I can’t really hold it against them. Especially if they are giving this away for free."
      ]
    },
    {
      "title": "Why I use Neovim",
      "date": "08/01/20",
      "text": [
        "Well it started out like any “why” starts out. Either to impress someone (married...so nope), boredom (yup this one).",
        "It took a little while to get used to the keys and commands, but honestly you don’t need to know that many. If anything I would recommend making the switch just to show how little you need in terms of what an IDE comes with. What are the essentials?",
        "Copy and Paste, Search and Replace, Code Formatting (I’ll never quit you Prettier!), Git merge conflicts (I still use VSCode for issue)",
        "After reading and watching so many videos on how to customize Neovim to get all the cool features I had on VSCode I learned why VIM came about. The logic of you should only be editing files, was an interesting idea. After having written so many lines of code, I noticed that I tend to edit files more often now then before.",
        "Down side? I end a lot of my emails now with.:w"
      ]
    }
  ]
}
